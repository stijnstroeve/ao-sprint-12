-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424 (edits made by Stijn Stroeve)
--   at:        2020-06-15 16:00:43 CEST
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE Artist 
    (
     ArtistID INTEGER NOT NULL IDENTITY,  
     ArtistName NVARCHAR (255) NOT NULL 
    )
GO

ALTER TABLE Artist ADD CONSTRAINT ARTISTS_PK PRIMARY KEY CLUSTERED  (ArtistID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Genre 
    (
     GenreID INTEGER NOT NULL IDENTITY, 
     GenreName NVARCHAR (50) 
    )
GO

ALTER TABLE Genre ADD CONSTRAINT GENRES_PK PRIMARY KEY CLUSTERED (GenreID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

--CREATE TABLE Rank 
--    (
--     Year INTEGER NOT NULL , 
--     Rank INTEGER NOT NULL 
--    )
--GO

--ALTER TABLE Rank ADD CONSTRAINT RANK_PK PRIMARY KEY CLUSTERED (Rank, Year)
--     WITH (
--     ALLOW_PAGE_LOCKS = ON , 
--     ALLOW_ROW_LOCKS = ON )
--GO

CREATE TABLE Role 
    (
     RoleID INTEGER NOT NULL IDENTITY, 
     RoleKey VARCHAR (25) NOT NULL , 
     RoleName VARCHAR (25) 
    )
GO

ALTER TABLE Role ADD CONSTRAINT ROLES_PK PRIMARY KEY CLUSTERED (RoleID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Song 
    (
     SongID INTEGER NOT NULL IDENTITY, 
     SongTitle NVARCHAR (255) NOT NULL , 
     ReleaseDate DATE NOT NULL , 
     ExternalImageUrl TEXT ,
     ExternalSampleUrl TEXT
    )
GO

ALTER TABLE Song ADD CONSTRAINT SONGS_PK PRIMARY KEY CLUSTERED (SongID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE SongArtist 
    (
     SongID INTEGER NOT NULL , 
     ArtistID INTEGER NOT NULL 
    )
GO

ALTER TABLE SongArtist ADD CONSTRAINT SongArtist_PK PRIMARY KEY CLUSTERED (SongID, ArtistID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE SongGenre 
    (
     SongID INTEGER NOT NULL , 
     GenreID INTEGER NOT NULL 
    )
GO

ALTER TABLE SongGenre ADD CONSTRAINT SongGenre_PK PRIMARY KEY CLUSTERED (SongID, GenreID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE SongRank 
    (
     Rank INTEGER NOT NULL , 
     Year INTEGER NOT NULL , 
     SongID INTEGER NOT NULL 
    )
GO

ALTER TABLE SongRank ADD CONSTRAINT SongRank_PK PRIMARY KEY CLUSTERED (Rank, Year, SongID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE "User" 
    (
     UserID INTEGER NOT NULL IDENTITY, 
     Email VARCHAR (50) NOT NULL , 
     FirstName NVARCHAR (35) NOT NULL , 
     LastName NVARCHAR (35) NOT NULL , 
     PasswordHash VARCHAR (255) NOT NULL , 
     RoleID INTEGER NOT NULL 
    )
GO

ALTER TABLE "User" ADD CONSTRAINT USERS_PK PRIMARY KEY CLUSTERED (UserID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE SongArtist 
    ADD CONSTRAINT SongArtist_Artist_FK FOREIGN KEY 
    ( 
     ArtistID
    ) 
    REFERENCES Artist 
    ( 
     ArtistID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE SongArtist 
    ADD CONSTRAINT SongArtist_Song_FK FOREIGN KEY 
    ( 
     SongID
    ) 
    REFERENCES Song 
    ( 
     SongID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE SongGenre 
    ADD CONSTRAINT SongGenre_Genre_FK FOREIGN KEY 
    ( 
     GenreID
    ) 
    REFERENCES Genre 
    ( 
     GenreID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE SongGenre 
    ADD CONSTRAINT SongGenre_Song_FK FOREIGN KEY 
    ( 
     SongID
    ) 
    REFERENCES Song 
    ( 
     SongID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

--ALTER TABLE SongRank 
--    ADD CONSTRAINT SongRank_Rank_FK FOREIGN KEY 
--    ( 
--     Rank, 
--     Year
--    ) 
--    REFERENCES Rank 
--    ( 
--     Rank , 
--     Year 
--    ) 
--    ON DELETE NO ACTION 
--    ON UPDATE NO ACTION 
--GO

ALTER TABLE SongRank 
    ADD CONSTRAINT SongRank_Song_FK FOREIGN KEY 
    ( 
     SongID
    ) 
    REFERENCES Song 
    ( 
     SongID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE "User" 
    ADD CONSTRAINT UserRole FOREIGN KEY 
    ( 
     RoleID
    ) 
    REFERENCES Role 
    ( 
     RoleID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             0
-- ALTER TABLE                             16
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
